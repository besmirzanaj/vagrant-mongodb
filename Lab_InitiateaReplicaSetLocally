rs.initiate()
use admin
db.createUser({user: "m103-admin", pwd: "m103-pass", roles: [{role: "root", db: "admin"}]})
mongo --host "m103-repl/192.168.103.100:27001" -u "m103-admin" -p "m103-pass" --authenticationDatabase "admin"
rs.add("192.168.103.100:27002")
rs.add("192.168.103.100:27003")

storage:
  dbPath: /var/mongodb/db/1
net:
  bindIp: 192.168.103.100,localhost
  port: 27001
security:
  authorization: enabled
  keyFile: /var/mongodb/pki/m103-keyfile
systemLog:
  destination: file
  path: /var/mongodb/db/mongod1.log
  logAppend: true
processManagement:
  fork: true
replication:
  replSetName: m103-repl
  
  
Creating the keyfile and setting permissions on it:

sudo mkdir -p /var/mongodb/pki/
sudo chown vagrant:vagrant /var/mongodb/pki/
openssl rand -base64 741 > /var/mongodb/pki/m103-keyfile
chmod 600 /var/mongodb/pki/m103-keyfile

m103.mongodb.university:27014

###

read replication

mongoimport --drop \
--host m103-repl/192.168.103.100:27002,192.168.103.100:27001,192.168.103.100:27003 \
-u "m103-admin" -p "m103-pass" --authenticationDatabase "admin" \
--db applicationData --collection products /dataset/products.json



###########

sharding



mongo --port 27002 -u "m103-admin" -p "m103-pass" --authenticationDatabase "admin"



db.products.createIndex({"sku" : 1})
db.adminCommand({shardCollection: "m103.products", key: {sku: 1 }})

mongoimport -d m103 -c products /shared/products.part2.json

MongoDB Enterprise mongos> db.getSiblingDB("m103").products.find({"sku" : 21572585 })
{
	"_id": ObjectId("573f71c8f29313caab8ba50c"),
	"sku": 21572585,
	"name": "Star Trek: The Motion Picture/Star Trek II: The Wrath
of Kahn (DVD)",
	"type": "Movie",
	"regularPrice": 12.99,
	"salePrice": 12.99,
	"shippingWeight": "0.25"
}



validate_lab_document_chunks m103.products-sku_23153496

